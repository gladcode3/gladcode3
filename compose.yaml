services:
    web:
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./web:/app
            - ./package.json:/app/package.json
            - node_modules:/app/node_modules
        restart: ${RESTART_POLICY}
        env_file:
            - .env
        command: npm run ${NODE_ENV}:webpack
        networks:
            - network
        # command: tail -f /dev/null #idle container
    api:
        build:
            context: .
            dockerfile: Dockerfile
        restart: ${RESTART_POLICY}
        env_file:
            - .env
        volumes:
            - ./api:/app
            - ./package.json:/app/package.json
            - node_modules:/app/node_modules
        command: npm run ${NODE_ENV}
        # command: tail -f /dev/null #idle container
        depends_on:
            - mysql
        networks:
            - network
    mysql:
        image: mysql:8.0
        restart: ${RESTART_POLICY}
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - mysql:/var/lib/mysql
            # - .:/app
        ports:
            - 127.0.0.1:${MYSQL_PORT}:3306
        networks:
            - network
volumes:
    node_modules:
    mysql:
networks:
    network:
        name: ${COMPOSE_PROJECT_NAME}